{"version":3,"sources":["Components/Header/header.jsx","Components/CurrentPokemon/currentPokemon.jsx","Redux/Actions/actions.js","Components/PokemonBlock/pokemonBlock.jsx","Components/PokemonList/pokemonList.jsx","Components/LoadMoreButton/loadMoreButton.jsx","Images/preloader.gif","Components/Preloader/preloader.jsx","App.js","Redux/Reducer/reducer.js","Redux/Store/store.js","index.js"],"names":["Header","className","CurrentPokemon","currentPokemon","useSelector","state","getProperty","property","result","searchProperty","stats","forEach","element","stat","name","base_stat","src","id","alt","types","length","type","weight","moves","GET_DATA_SUCCESS","GET_TYPES_SUCCESS","GET_POKEMON_PROPS_SUCCESS","TOGGLE_FETCHING_TYPE","axios","require","getData","url","dispatch","get","then","resp","payload","data","results","setTimeout","toggleFetchingType","getTypes","getPokemonProps","newValue","PokemonBlock","props","pokemonInfo","useDispatch","urlArr","split","useEffect","onClick","reduce","acc","curr","res","map","el","i","PokemonList","pokemons","LoadMoreButton","useState","setId","Preloader","preloader","connect","isFetching","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"kUAWeA,EARA,WACX,OACI,qBAAKC,UAAW,SAAhB,SACI,4C,OC0EGC,G,MA5EQ,WACnB,IAAMC,EAAiBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,kBAE5CG,EAAc,SAACC,GACjB,IAAIC,EACEC,EAAiB,SAACF,GACpBJ,EAAeO,MAAMC,SAAQ,SAAAC,GACrBA,EAAQC,KAAKC,OAASP,IACtBC,EAASI,EAAQG,eAI7B,OAAQR,GACJ,IAAK,SAAUE,EAAe,UAAW,MACzC,IAAK,UAAWA,EAAe,WAAY,MAC3C,IAAK,KAAMA,EAAe,MAAO,MACjC,IAAK,kBAAmBA,EAAe,mBAAoB,MAC3D,IAAK,iBAAkBA,EAAe,kBAAmB,MACzD,IAAK,QAASA,EAAe,SAAU,MACvC,QAASD,EAAS,EAEtB,OAAOA,GAEX,OACI,sBAAKP,UAAW,kBAAhB,UACI,qBAAKA,UAAW,wBAAhB,SACI,qBAAKe,IAAG,wDAAmDb,EAAec,GAAlE,QAA4EC,IAAI,OAE5F,+BAAKf,EAAeW,KAApB,KAA4BX,EAAec,MAC3C,sBAAKhB,UAAW,iBAAhB,UACI,sBAAKA,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,kBACA,sBACIA,UAAW,QADf,SAEME,EAAegB,MAAMC,OAAS,EAC5BjB,EAAegB,MAAM,GAAGE,KAAKP,KAAO,IAAMX,EAAegB,MAAM,GAAGE,KAAKP,KACvEX,EAAegB,MAAM,GAAGE,KAAKP,UAGzC,sBAAKb,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,oBACA,sBAAMA,UAAW,QAAjB,SAA2BK,EAAY,eAE3C,sBAAKL,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,qBACA,sBAAMA,UAAW,QAAjB,SAA2BK,EAAY,gBAE3C,sBAAKL,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,gBACA,sBAAMA,UAAW,QAAjB,SAA2BK,EAAY,WAE3C,sBAAKL,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,uBACA,sBAAMA,UAAW,QAAjB,SAA2BK,EAAY,uBAE3C,sBAAKL,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,wBACA,sBAAMA,UAAW,QAAjB,SAA2BK,EAAY,wBAE3C,sBAAKL,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,mBACA,sBAAMA,UAAW,QAAjB,SAA2BK,EAAY,cAE3C,sBAAKL,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,oBACA,sBAAMA,UAAW,QAAjB,SAA2BE,EAAemB,YAE9C,sBAAKrB,UAAW,UAAhB,UACI,sBAAMA,UAAW,WAAjB,yBACA,sBAAMA,UAAW,QAAjB,SAA2BE,EAAeoB,MAAMH,oB,eCzEvDI,EAAmB,mBACnBC,EAAoB,oBACpBC,EAA4B,4BAC5BC,EAAuB,uBAE9BC,EAAQC,EAAQ,IASTC,EAAU,SAACC,GACpB,OAAO,SAAAC,GACHJ,EAAMK,IAAIF,GAAKG,MAAK,SAAAC,GAChB,IAAMC,EAAUD,EAAKE,KAAKC,QAC1BC,YAAW,WACPP,EAASQ,GAAmB,IAC5BR,EAZL,CACHX,KAAMG,EACNY,QAUgCA,MAC1B,WAYDK,EAAW,SAACV,GACrB,OAAO,SAAAC,GACHJ,EAAMK,IAAIF,GAAKG,MAAK,SAAAC,GAChB,IAAMC,EAAUD,EAAKE,KACrBL,EAVD,CACHX,KAAMI,EACNW,QAQ6BA,SAWxBM,EAAkB,SAACX,GAC5B,OAAO,SAAAC,GACHJ,EAAMK,IAAIF,GAAKG,MAAK,SAAAC,GAChB,IAAMC,EAAUD,EAAKE,KACrBL,EAVD,CACHX,KAAMK,EACNU,QAQoCA,SAKtCI,EAAqB,SAACG,GACxB,MAAO,CACHtB,KAAMM,EACNS,QAASO,ICpBFC,G,MAnCM,SAACC,GAClB,IAAQC,EAAgBD,EAAhBC,YACF3B,EAAQf,aAAY,SAAAC,GAAK,OAAIA,EAAMc,SACnCa,EAAWe,cAGbC,EAASF,EAAYf,IAAIkB,MAAM,KAC/BhC,EAAK+B,EAAOA,EAAO5B,OAAS,GAOhC,OALA8B,qBAAU,WACNlB,EAASS,EAAS,qCAAD,OAAsCxB,OAExD,CAACA,IAGA,sBAAKhB,UAAW,gBAAiBkD,QAAS,WAAQnB,EAASU,EAAgB,qCAAD,OAAsCzB,MAAhH,UACI,qBAAKhB,UAAW,SAAhB,SACI,qBAAKe,IAAG,wDAAmDC,EAAnD,QAA6DC,IAAI,OAE7E,+BAAO4B,EAAYhC,OACnB,qBAAKb,UAAW,QAAhB,SAEQkB,EAAMiC,QAAO,SAACC,EAAKC,GACf,IAAKrC,IAAOqC,EAAKrC,GAAI,CACjB,IAAMsC,EAAMD,EAAKnC,MAAMqC,KAAI,SAACC,EAAIC,GAAL,OAAW,qCAAgBD,EAAGpC,KAAKP,KAAxB,MAAW4C,MACjDL,EAAG,sBAAOA,GAAP,YAAeE,IAEtB,OAAOF,IACR,WCZRM,EAhBK,WAChB,IAAMC,EAAWxD,aAAY,SAAAC,GAAK,OAAIA,EAAMuD,YAC5C,OACI,qBAAK3D,UAAW,eAAhB,SAES2D,EAASxC,OAAS,EACfwC,EAASJ,KAAI,SAACF,EAAMI,GAAP,OAAa,cAAC,EAAD,CAEtBZ,YAAaQ,GADRI,MAGL,Q,QCITG,G,MAdQ,WACnB,IAAM7B,EAAWe,cACjB,EAAoBe,mBAAS,IAA7B,mBAAO7C,EAAP,KAAW8C,EAAX,KAKA,OACI,qBAAK9D,UAAW,SAAUkD,QALb,WACbnB,EAASF,EAAQ,uDAAD,OAAwDb,KACxE8C,EAAM9C,EAAK,KAGX,yBCbO,MAA0B,sCCY1B+C,G,MARG,WACd,OACI,qBAAK/D,UAAW,YAAhB,SACI,qBAAKe,IAAKiD,EAAW/C,IAAI,SC6BtBgD,G,MAAAA,eAzBH,WAEV,IAAMC,EAAa/D,aAAY,SAAAC,GAAK,OAAIA,EAAM8D,cACxChE,EAAiBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,kBAC5C6B,EAAWe,cAQjB,OANAG,qBACE,WACElB,EAASF,EAAQ,kDAEhB,IAGH,sBAAK7B,UAAW,MAAhB,UACE,cAAC,EAAD,IACA,sBAAKA,UAAW,kBAAhB,UACGkE,EAAa,cAAC,EAAD,IAAgB,KAC9B,cAAC,EAAD,IACEhE,EAAkB,cAAC,EAAD,IAAqB,QAE3C,cAAC,EAAD,W,eC7BFiE,EAAe,CACfR,SAAU,GACVzC,MAAO,GACPhB,eAAgB,KAChBgE,YAAY,G,QCFHE,EAAQC,aDKE,WAAmC,IAAlCjE,EAAiC,uDAAzB+D,EAAcG,EAAW,uCACrD,OAAQA,EAAOlD,MACX,KAAKG,EACD,OAAO,2BACAnB,GADP,IAEIuD,SAAS,GAAD,mBAAMvD,EAAMuD,UAAZ,YAAyBW,EAAOnC,YAEhD,KAAKX,EACD,OAAO,2BACApB,GADP,IAEIc,MAAM,GAAD,mBAAMd,EAAMc,OAAZ,CAAmB,CACpBF,GAAIsD,EAAOnC,QAAQnB,GACnBE,MAAOoD,EAAOnC,QAAQjB,WAGlC,KAAKO,EACD,OAAO,2BACArB,GADP,IAEIF,eAAgBoE,EAAOnC,UAE/B,KAAKT,EACD,OAAO,2BACAtB,GADP,IAEI8D,WAAYI,EAAOnC,UAE3B,QAAS,OAAO/B,KC9BkBmE,YAAgBC,MCI1DC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEJO,SAASC,eAAe,W","file":"static/js/main.72c9353e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={'header'}>\r\n            <h2>Pokedex</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './currentPokemon.css'\r\n\r\nconst CurrentPokemon = () => {\r\n    const currentPokemon = useSelector(state => state.currentPokemon);\r\n\r\n    const getProperty = (property) => {\r\n        let result;\r\n        const searchProperty = (property) => {\r\n            currentPokemon.stats.forEach(element => {\r\n                if (element.stat.name === property) {\r\n                    result = element.base_stat\r\n                }\r\n            });\r\n        }\r\n        switch (property) {\r\n            case 'attack': searchProperty('attack'); break;\r\n            case 'defense': searchProperty('defense'); break;\r\n            case 'hp': searchProperty('hp'); break;\r\n            case 'special-defense': searchProperty('special-defense'); break;\r\n            case 'special-attack': searchProperty('special-attack'); break;\r\n            case 'speed': searchProperty('speed'); break;\r\n            default: result = 0;\r\n        }\r\n        return result;\r\n    }\r\n    return (\r\n        <div className={'current_pokemon'}>\r\n            <div className={'current_pokemon_image'}>\r\n                <img src={`https://pokeres.bastionbot.org/images/pokemon/${currentPokemon.id}.png`} alt=\"\" />\r\n            </div>\r\n            <h3>{currentPokemon.name} #{currentPokemon.id}</h3>\r\n            <div className={'data_container'}>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Type</span>\r\n                    <span\r\n                        className={'value'}>\r\n                        {(currentPokemon.types.length > 1) ?\r\n                            currentPokemon.types[0].type.name + ' ' + currentPokemon.types[1].type.name :\r\n                            currentPokemon.types[0].type.name}\r\n                    </span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Attack</span>\r\n                    <span className={'value'}>{getProperty('attack')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Defense</span>\r\n                    <span className={'value'}>{getProperty('defense')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>HP</span>\r\n                    <span className={'value'}>{getProperty('hp')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>SP Attack</span>\r\n                    <span className={'value'}>{getProperty('special-attack')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>SP Defense</span>\r\n                    <span className={'value'}>{getProperty('special-defense')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Speed</span>\r\n                    <span className={'value'}>{getProperty('speed')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Weight</span>\r\n                    <span className={'value'}>{currentPokemon.weight}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Total moves</span>\r\n                    <span className={'value'}>{currentPokemon.moves.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentPokemon;","export const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_TYPES_SUCCESS = 'GET_TYPES_SUCCESS';\r\nexport const GET_POKEMON_PROPS_SUCCESS = 'GET_POKEMON_PROPS_SUCCESS';\r\nexport const TOGGLE_FETCHING_TYPE = 'TOGGLE_FETCHING_TYPE';\r\n\r\nconst axios = require('axios');\r\n\r\nconst getDataSuccess = (newValue) => {\r\n    return {\r\n        type: GET_DATA_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getData = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data.results;\r\n            setTimeout(()=> {\r\n                dispatch(toggleFetchingType(false));\r\n                dispatch(getDataSuccess(payload));\r\n            },1500);\r\n        });\r\n    }\r\n}\r\n\r\nconst getTypesSuccess = (newValue) => {\r\n    return {\r\n        type: GET_TYPES_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getTypes = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data;\r\n            dispatch(getTypesSuccess(payload))\r\n        })\r\n    }\r\n}\r\nconst getPokemonPropsSuccess = (newValue) => {\r\n    return {\r\n        type: GET_POKEMON_PROPS_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getPokemonProps = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data;\r\n            dispatch(getPokemonPropsSuccess(payload))\r\n        })\r\n    }\r\n}\r\n\r\nconst toggleFetchingType = (newValue) => {\r\n    return {\r\n        type: TOGGLE_FETCHING_TYPE,\r\n        payload: newValue\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPokemonProps, getTypes } from '../../Redux/Actions/actions';\r\nimport './pokemonBlock.css'\r\n\r\nconst PokemonBlock = (props) => {\r\n    const { pokemonInfo } = props;\r\n    const types = useSelector(state => state.types);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    let urlArr = pokemonInfo.url.split('/');\r\n    let id = urlArr[urlArr.length - 2];\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes(`https://pokeapi.co/api/v2/pokemon/${id}`))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    }, [id])\r\n\r\n    return (\r\n        <div className={'pokemon_block'} onClick={() => { dispatch(getPokemonProps(`https://pokeapi.co/api/v2/pokemon/${id}`)) }}>\r\n            <div className={'avatar'}>\r\n                <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} alt=\"\" />\r\n            </div>\r\n            <span>{pokemonInfo.name}</span>\r\n            <div className={'types'}>\r\n                {\r\n                    types.reduce((acc, curr) => {\r\n                        if (+id === curr.id) {\r\n                            const res = curr.types.map((el, i) => <span key={i}> {el.type.name} </span>)\r\n                            acc = [...acc, ...res]\r\n                        }\r\n                        return acc;\r\n                    }, [])\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonBlock;","import React from 'react';\r\nimport './pokemonList.css';\r\nimport PokemonBlock from '../PokemonBlock/pokemonBlock';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PokemonList = () => {\r\n    const pokemons = useSelector(state => state.pokemons);\r\n    return (\r\n        <div className={'pokemon_list'}>\r\n            {\r\n                (pokemons.length > 0) ?\r\n                    pokemons.map((curr, i) => <PokemonBlock\r\n                        key={i}\r\n                        pokemonInfo={curr}\r\n                    />\r\n                    ) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getData } from '../../Redux/Actions/actions';\r\nimport './loadMoreButton.css';\r\n\r\nconst LoadMoreButton = () => {\r\n    const dispatch = useDispatch();\r\n    const [id, setId] = useState(12);\r\n    const loadMore = () => {\r\n        dispatch(getData(`https://pokeapi.co/api/v2/pokemon/?limit=12&&offset=${id}`));\r\n        setId(id + 12);\r\n    }\r\n    return (\r\n        <div className={'button'} onClick={loadMore}>\r\n            Load More\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreButton;","export default __webpack_public_path__ + \"static/media/preloader.45df2d82.gif\";","import React from 'react';\r\nimport preloader from './../../Images/preloader.gif';\r\nimport './preloader.css';\r\n\r\nconst Preloader = ()=>{\r\n    return(\r\n        <div className={'preloader'} >\r\n            <img src={preloader} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { useEffect } from 'react';\nimport Header from './Components/Header/header';\nimport CurrentPokemon from './Components/CurrentPokemon/currentPokemon';\nimport PokemonsList from './Components/PokemonList/pokemonList';\nimport LoadMoreButton from './Components/LoadMoreButton/loadMoreButton';\nimport Preloader from './Components/Preloader/preloader';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getData } from './Redux/Actions/actions';\nimport './app.css';\n\n\nconst App = () => {\n\n  const isFetching = useSelector(state => state.isFetching);\n  const currentPokemon = useSelector(state => state.currentPokemon);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      dispatch(getData('https://pokeapi.co/api/v2/pokemon/?limit=12'))\n      // eslint-disable-next-line react-hooks/exhaustive-deps \n    }, []\n  )\n  return (\n    <div className={\"App\"}>\n      <Header />\n      <div className={'pokemons_render'}>\n        {isFetching ? <Preloader /> : null}\n        <PokemonsList />\n        {(currentPokemon) ? <CurrentPokemon /> : null}\n      </div>\n      <LoadMoreButton />\n    </div>\n  );\n}\n\nexport default connect()(App);","import { GET_DATA_SUCCESS, GET_TYPES_SUCCESS, GET_POKEMON_PROPS_SUCCESS, TOGGLE_FETCHING_TYPE } from '../Actions/actions';\r\n\r\nlet initialState = {\r\n    pokemons: [],\r\n    types: [],\r\n    currentPokemon: null,\r\n    isFetching: true\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pokemons: [...state.pokemons, ...action.payload]\r\n            }\r\n        case GET_TYPES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                types: [...state.types, {\r\n                    id: action.payload.id,\r\n                    types: action.payload.types\r\n                }]\r\n            }\r\n        case GET_POKEMON_PROPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentPokemon: action.payload\r\n            }\r\n        case TOGGLE_FETCHING_TYPE:\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport { reducer } from '../Reducer/reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/Store/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}