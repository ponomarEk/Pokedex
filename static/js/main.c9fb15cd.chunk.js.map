{"version":3,"sources":["Components/Header/header.jsx","Components/CurrentPokemon/currentPokemon.jsx","Components/PokemonBlock/pokemonBlock.jsx","Components/PokemonList/pokemonList.jsx","Components/LoadMoreButton/loadMoreButton.jsx","Redux/Actions/actions.js","App.js","Redux/Reducer/reducer.js","Redux/Store/store.js","index.js"],"names":["Header","className","CurrentPokemon","props","currentPokemon","src","id","alt","name","types","length","type","result","stats","forEach","element","stat","base_stat","getAttack","getDefense","getHP","getSPAttack","getSPDefense","getSpeed","weight","moves","PokemonBlock","pokemonInfo","getTypes","getPokemonProps","i","url","split","reverse","join","useEffect","onClick","map","curr","el","showTypes","PokemonList","pokemons","clearTypesArray","undefined","renderPokemons","LoadMoreButton","getData","useState","setId","GET_DATA_SUCCESS","GET_TYPES_SUCCESS","GET_POKEMON_PROPS_SUCCESS","axios","require","dispatch","get","then","resp","payload","data","results","connect","state","bindActionCreators","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9fb15cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={'header'}>\r\n            <h2>Pokedex</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './currentPokemon.css'\r\n\r\nconst CurrentPokemon = (props) => {\r\n    const { currentPokemon } = props;\r\n\r\n    const getAttack = () => {\r\n        let result;\r\n        currentPokemon.stats.forEach(element => {\r\n            if (element.stat.name === 'attack') {\r\n                result = element.base_stat\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    const getDefense = () => {\r\n        let result;\r\n        currentPokemon.stats.forEach(element => {\r\n            if (element.stat.name === 'defense') {\r\n                result = element.base_stat\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    const getHP = () => {\r\n        let result;\r\n        currentPokemon.stats.forEach(element => {\r\n            if (element.stat.name === 'hp') {\r\n                result = element.base_stat\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    const getSPDefense = () => {\r\n        let result;\r\n        currentPokemon.stats.forEach(element => {\r\n            if (element.stat.name === 'special-defense') {\r\n                result = element.base_stat\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    const getSPAttack = () => {\r\n        let result;\r\n        currentPokemon.stats.forEach(element => {\r\n            if (element.stat.name === 'special-attack') {\r\n                result = element.base_stat\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    const getSpeed = () => {\r\n        let result;\r\n        currentPokemon.stats.forEach(element => {\r\n            if (element.stat.name === 'speed') {\r\n                result = element.base_stat\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    return (\r\n        <div className={'current_pokemon'}>\r\n            <div className={'current_pokemon_image'}>\r\n                <img src={`https://pokeres.bastionbot.org/images/pokemon/${currentPokemon.id}.png`} alt=\"\" />\r\n            </div>\r\n            <h3>{currentPokemon.name} #{currentPokemon.id}</h3>\r\n            <div className={'data_container'}>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Type</span>\r\n                    <span\r\n                        className={'value'}>\r\n                        {(currentPokemon.types.length > 1) ?\r\n                            currentPokemon.types[0].type.name + ' ' + currentPokemon.types[1].type.name :\r\n                            currentPokemon.types[0].type.name}\r\n                    </span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Attack</span>\r\n                    <span className={'value'}>{getAttack()}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Defense</span>\r\n                    <span className={'value'}>{getDefense()}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>HP</span>\r\n                    <span className={'value'}>{getHP()}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>SP Attack</span>\r\n                    <span className={'value'}>{getSPAttack()}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>SP Defense</span>\r\n                    <span className={'value'}>{getSPDefense()}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Speed</span>\r\n                    <span className={'value'}>{getSpeed()}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Weight</span>\r\n                    <span className={'value'}>{currentPokemon.weight}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Total moves</span>\r\n                    <span className={'value'}>{currentPokemon.moves.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentPokemon;","import React, { useEffect } from 'react';\r\nimport './pokemonBlock.css'\r\n\r\nconst PokemonBlock = (props) => {\r\n    const {pokemonInfo,types,getTypes,getPokemonProps}=props;\r\n    let id='';\r\n    for(let i=pokemonInfo.url.length-2;i>=0;i--){\r\n        if(pokemonInfo.url[i]!=='/'){\r\n            id+=pokemonInfo.url[i];\r\n        }else{\r\n            break;\r\n        }\r\n    }\r\n    id=id.split('').reverse().join('');\r\n\r\n    useEffect(()=>{\r\n            getTypes(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    },[id])\r\n\r\n    const showTypes = ()=>{\r\n        if(types.length>0){\r\n            const result = types.map((curr)=>{\r\n                if(+id===curr.id){\r\n                    const res = curr.types.map((el,i)=>{\r\n                        return <span key = {i}> {el.type.name} </span>\r\n                    })\r\n                    return res;\r\n\r\n                }else{\r\n                    return null\r\n                }\r\n            })\r\n            return result;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'pokemon_block'} onClick={()=>{getPokemonProps(`https://pokeapi.co/api/v2/pokemon/${id}`)}}>\r\n            <div className={'avatar'}>\r\n                <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} alt=\"\" />\r\n            </div>\r\n            <span>{pokemonInfo.name}</span>\r\n            <div className={'types'}>\r\n            {showTypes()}\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonBlock;","import React from 'react';\r\nimport './pokemonList.css';\r\nimport PokemonBlock from '../PokemonBlock/pokemonBlock';\r\n\r\nconst PokemonList = (props) => {\r\n    const { pokemons,getPokemonProps,getTypes ,types,clearTypesArray} = props;\r\n    const renderPokemons = () => {\r\n        if (pokemons !== undefined) {\r\n            const mapped = pokemons.map((curr, i) => {\r\n                return <PokemonBlock\r\n                    key={i}\r\n                    pokemonInfo={curr}\r\n                    getTypes={getTypes}\r\n                    getPokemonProps={getPokemonProps} \r\n                    clearTypesArray={clearTypesArray}\r\n                    types={types}\r\n                    />\r\n            })\r\n            return mapped;\r\n        }\r\n    }\r\n    return (\r\n        <div className={'pokemon_list'}>\r\n            {renderPokemons()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList;","import React, { useState } from 'react';\r\nimport './loadMoreButton.css';\r\n\r\nconst LoadMoreButton = (props)=>{\r\n    const{getData}=props;\r\n    const [id,setId]=useState(12)\r\n    const loadMore = ()=>{\r\n        getData(`https://pokeapi.co/api/v2/pokemon/?limit=12&&offset=${id}`);\r\n        setId(id+12);\r\n    }\r\n    return(\r\n        <div className={'button'} onClick={loadMore}>\r\n            Load More\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreButton;","export const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_TYPES_SUCCESS = 'GET_TYPES_SUCCESS';\r\nexport const GET_POKEMON_PROPS_SUCCESS = 'GET_POKEMON_PROPS_SUCCESS';\r\nexport const CLEAR_TYPES_ARRAY = 'CLEAR_TYPES_ARRAY';\r\n\r\nconst axios = require('axios');\r\n\r\nconst getDataSuccess = (newValue) => {\r\n    return {\r\n        type: GET_DATA_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getData = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data.results;\r\n            dispatch(getDataSuccess(payload));\r\n        });\r\n    }\r\n}\r\n\r\nconst getTypesSuccess = (newValue) => {\r\n    return {\r\n        type: GET_TYPES_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getTypes = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data;\r\n            dispatch(getTypesSuccess(payload))\r\n        })\r\n    }\r\n}\r\nconst getPokemonPropsSuccess = (newValue) => {\r\n    return {\r\n        type: GET_POKEMON_PROPS_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getPokemonProps = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data;\r\n            dispatch(getPokemonPropsSuccess(payload))\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearTypesArray = () => {\r\n    return {\r\n        type: CLEAR_TYPES_ARRAY\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\nimport Header from './Components/Header/header';\nimport CurrentPokemon from './Components/CurrentPokemon/currentPokemon';\nimport PokemonsList from './Components/PokemonList/pokemonList';\nimport LoadMoreButton from './Components/LoadMoreButton/loadMoreButton';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getData, getPokemonProps, getTypes } from './Redux/Actions/actions';\nimport './app.css';\n\n\nconst App = (props) => {\n  const { getData,currentPokemon } = props;\n  useEffect(\n    () => {\n      getData('https://pokeapi.co/api/v2/pokemon/?limit=12')\n      // eslint-disable-next-line react-hooks/exhaustive-deps \n    }, []\n  )\n  return (\n    <div className={\"App\"}>\n      <Header />\n      <div className={'pokemons_render'}>\n        <PokemonsList {...props} />\n        { (currentPokemon!==null)?<CurrentPokemon currentPokemon={currentPokemon}/>:null}\n      </div>\n      <LoadMoreButton getData={getData} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    pokemons: state.pokemons,\n    currentPokemon:state.currentPokemon,\n    types: state.types\n  };\n}\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    getData: bindActionCreators(getData, dispatch),\n    getTypes: bindActionCreators(getTypes, dispatch),\n    getPokemonProps:bindActionCreators(getPokemonProps,dispatch)\n  }\n}\nexport default connect(mapStateToProps, mapActionsToProps)(App);","import { GET_DATA_SUCCESS, GET_TYPES_SUCCESS, GET_POKEMON_PROPS_SUCCESS } from '../Actions/actions';\r\n\r\nlet initialState = {\r\n    pokemons: [\r\n\r\n    ],\r\n    types: [\r\n\r\n    ],\r\n    currentPokemon: null\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload\r\n            }\r\n        case GET_TYPES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                types: [...state.types, {\r\n                    id: action.payload.id,\r\n                    types: action.payload.types\r\n                }]\r\n            }\r\n        case GET_POKEMON_PROPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentPokemon: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport { reducer } from '../Reducer/reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/Store/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}