{"version":3,"sources":["Components/Header/header.jsx","Components/CurrentPokemon/currentPokemon.jsx","Components/PokemonBlock/pokemonBlock.jsx","Components/PokemonList/pokemonList.jsx","Components/LoadMoreButton/loadMoreButton.jsx","Images/preloader.gif","Components/Preloader/preloader.jsx","Redux/Actions/actions.js","App.js","Redux/Reducer/reducer.js","Redux/Store/store.js","index.js"],"names":["Header","className","CurrentPokemon","props","currentPokemon","getProperty","property","result","searchProperty","stats","forEach","element","stat","name","base_stat","src","id","alt","types","length","type","weight","moves","PokemonBlock","pokemonInfo","getTypes","getPokemonProps","urlArr","url","split","useEffect","onClick","reduce","acc","curr","res","map","el","i","PokemonList","pokemons","LoadMoreButton","getData","useState","setId","Preloader","preloader","GET_DATA_SUCCESS","GET_TYPES_SUCCESS","GET_POKEMON_PROPS_SUCCESS","TOGGLE_FETCHING_TYPE","axios","require","dispatch","get","then","resp","payload","data","results","setTimeout","toggleFetchingType","newValue","connect","state","isFetching","bindActionCreators","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2fa372c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={'header'}>\r\n            <h2>Pokedex</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './currentPokemon.css'\r\n\r\nconst CurrentPokemon = (props) => {\r\n    const { currentPokemon } = props;\r\n\r\n    const getProperty = (property) => {\r\n        let result;\r\n        const searchProperty = (property) => {\r\n            currentPokemon.stats.forEach(element => {\r\n                if (element.stat.name === property) {\r\n                    result = element.base_stat\r\n                }\r\n            });\r\n        }\r\n        switch (property) {\r\n            case 'attack': searchProperty('attack'); break;\r\n            case 'defense': searchProperty('defense'); break;\r\n            case 'hp': searchProperty('hp'); break;\r\n            case 'special-defense': searchProperty('special-defense'); break;\r\n            case 'special-attack': searchProperty('special-attack'); break;\r\n            case 'speed': searchProperty('speed'); break;\r\n            default: result = 0;\r\n        }\r\n        return result;\r\n    }\r\n    return (\r\n        <div className={'current_pokemon'}>\r\n            <div className={'current_pokemon_image'}>\r\n                <img src={`https://pokeres.bastionbot.org/images/pokemon/${currentPokemon.id}.png`} alt=\"\" />\r\n            </div>\r\n            <h3>{currentPokemon.name} #{currentPokemon.id}</h3>\r\n            <div className={'data_container'}>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Type</span>\r\n                    <span\r\n                        className={'value'}>\r\n                        {(currentPokemon.types.length > 1) ?\r\n                            currentPokemon.types[0].type.name + ' ' + currentPokemon.types[1].type.name :\r\n                            currentPokemon.types[0].type.name}\r\n                    </span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Attack</span>\r\n                    <span className={'value'}>{getProperty('attack')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Defense</span>\r\n                    <span className={'value'}>{getProperty('defense')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>HP</span>\r\n                    <span className={'value'}>{getProperty('hp')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>SP Attack</span>\r\n                    <span className={'value'}>{getProperty('special-attack')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>SP Defense</span>\r\n                    <span className={'value'}>{getProperty('special-defense')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Speed</span>\r\n                    <span className={'value'}>{getProperty('speed')}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Weight</span>\r\n                    <span className={'value'}>{currentPokemon.weight}</span>\r\n                </div>\r\n                <div className={'wrapper'}>\r\n                    <span className={'property'}>Total moves</span>\r\n                    <span className={'value'}>{currentPokemon.moves.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentPokemon;","import React, { useEffect } from 'react';\r\nimport './pokemonBlock.css'\r\n\r\nconst PokemonBlock = (props) => {\r\n    const { pokemonInfo, types, getTypes, getPokemonProps } = props;\r\n\r\n    let urlArr = pokemonInfo.url.split('/');\r\n    let id = urlArr[urlArr.length - 2];\r\n\r\n    useEffect(() => {\r\n        getTypes(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    }, [id])\r\n\r\n    return (\r\n        <div className={'pokemon_block'} onClick={() => { getPokemonProps(`https://pokeapi.co/api/v2/pokemon/${id}`) }}>\r\n            <div className={'avatar'}>\r\n                <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} alt=\"\" />\r\n            </div>\r\n            <span>{pokemonInfo.name}</span>\r\n            <div className={'types'}>\r\n                {\r\n                    types.reduce((acc, curr) => {\r\n                        if (+id === curr.id) {\r\n                            const res = curr.types.map((el, i) => <span key={i}> {el.type.name} </span>)\r\n                            acc = [...acc, ...res]\r\n                        }\r\n                        return acc;\r\n                    }, [])\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonBlock;","import React from 'react';\r\nimport './pokemonList.css';\r\nimport PokemonBlock from '../PokemonBlock/pokemonBlock';\r\n\r\nconst PokemonList = (props) => {\r\n    const { pokemons, getPokemonProps, getTypes, types } = props;\r\n\r\n    return (\r\n        <div className={'pokemon_list'}>\r\n            {\r\n                (pokemons.length > 0) ?\r\n                    pokemons.map((curr, i) => <PokemonBlock\r\n                        key={i}\r\n                        pokemonInfo={curr}\r\n                        getTypes={getTypes}\r\n                        getPokemonProps={getPokemonProps}\r\n                        types={types}\r\n                    />\r\n                ) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList;","import React, { useState } from 'react';\r\nimport './loadMoreButton.css';\r\n\r\nconst LoadMoreButton = (props) => {\r\n    const { getData } = props;\r\n    const [id, setId] = useState(12)\r\n    const loadMore = () => {\r\n        getData(`https://pokeapi.co/api/v2/pokemon/?limit=12&&offset=${id}`);\r\n        setId(id + 12);\r\n    }\r\n    return (\r\n        <div className={'button'} onClick={loadMore}>\r\n            Load More\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreButton;","export default __webpack_public_path__ + \"static/media/preloader.45df2d82.gif\";","import React from 'react';\r\nimport preloader from './../../Images/preloader.gif';\r\nimport './preloader.css';\r\n\r\nconst Preloader = ()=>{\r\n    return(\r\n        <div className={'preloader'} >\r\n            <img src={preloader} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_TYPES_SUCCESS = 'GET_TYPES_SUCCESS';\r\nexport const GET_POKEMON_PROPS_SUCCESS = 'GET_POKEMON_PROPS_SUCCESS';\r\nexport const TOGGLE_FETCHING_TYPE = 'TOGGLE_FETCHING_TYPE';\r\n\r\nconst axios = require('axios');\r\n\r\nconst getDataSuccess = (newValue) => {\r\n    return {\r\n        type: GET_DATA_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getData = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data.results;\r\n            setTimeout(()=> {\r\n                dispatch(toggleFetchingType(false));\r\n                dispatch(getDataSuccess(payload));\r\n            },1500);\r\n        });\r\n    }\r\n}\r\n\r\nconst getTypesSuccess = (newValue) => {\r\n    return {\r\n        type: GET_TYPES_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getTypes = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data;\r\n            dispatch(getTypesSuccess(payload))\r\n        })\r\n    }\r\n}\r\nconst getPokemonPropsSuccess = (newValue) => {\r\n    return {\r\n        type: GET_POKEMON_PROPS_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getPokemonProps = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            const payload = resp.data;\r\n            dispatch(getPokemonPropsSuccess(payload))\r\n        })\r\n    }\r\n}\r\n\r\nconst toggleFetchingType = (newValue) => {\r\n    return {\r\n        type: TOGGLE_FETCHING_TYPE,\r\n        payload: newValue\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\nimport Header from './Components/Header/header';\nimport CurrentPokemon from './Components/CurrentPokemon/currentPokemon';\nimport PokemonsList from './Components/PokemonList/pokemonList';\nimport LoadMoreButton from './Components/LoadMoreButton/loadMoreButton';\nimport Preloader from './Components/Preloader/preloader';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getData, getPokemonProps, getTypes } from './Redux/Actions/actions';\nimport './app.css';\n\n\nconst App = (props) => {\n  const { getData, currentPokemon, isFetching } = props;\n  useEffect(\n    () => {\n      getData('https://pokeapi.co/api/v2/pokemon/?limit=12')\n      // eslint-disable-next-line react-hooks/exhaustive-deps \n    }, []\n  )\n  return (\n    <div className={\"App\"}>\n      <Header />\n      <div className={'pokemons_render'}>\n      {isFetching ? <Preloader /> : null}\n        <PokemonsList {...props} />\n        {(currentPokemon) ? <CurrentPokemon currentPokemon={currentPokemon} /> : null}\n      </div>\n      <LoadMoreButton getData={getData} />\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    pokemons: state.pokemons,\n    currentPokemon: state.currentPokemon,\n    types: state.types,\n    isFetching: state.isFetching\n  };\n}\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    getData: bindActionCreators(getData, dispatch),\n    getTypes: bindActionCreators(getTypes, dispatch),\n    getPokemonProps: bindActionCreators(getPokemonProps, dispatch)\n  }\n}\nexport default connect(mapStateToProps, mapActionsToProps)(App);","import { GET_DATA_SUCCESS, GET_TYPES_SUCCESS, GET_POKEMON_PROPS_SUCCESS, TOGGLE_FETCHING_TYPE } from '../Actions/actions';\r\n\r\nlet initialState = {\r\n    pokemons: [],\r\n    types: [],\r\n    currentPokemon: null,\r\n    isFetching: true\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pokemons: [...state.pokemons, ...action.payload]\r\n            }\r\n        case GET_TYPES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                types: [...state.types, {\r\n                    id: action.payload.id,\r\n                    types: action.payload.types\r\n                }]\r\n            }\r\n        case GET_POKEMON_PROPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentPokemon: action.payload\r\n            }\r\n        case TOGGLE_FETCHING_TYPE:\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport { reducer } from '../Reducer/reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/Store/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}